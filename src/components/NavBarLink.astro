---
import config from "virtual:starlight/user-config";

import { MenuData } from "../constants";
import type { Props } from "@astrojs/starlight/props";

const getCurrrentLanguageParam = (type = "label") => {
  let text = "";
  const [_leadingSlash, baseSegment] = Astro.url.pathname.split("/");
  if (baseSegment && baseSegment in (config?.locales ?? {})) {
    text = config?.locales?.[baseSegment].lang ?? "";

    // 英文时候从 en 变成 En
    const capitalized = text.charAt(0).toUpperCase() + text.slice(1);

    return `${type}${capitalized}`;
  }

  return `${type}`;
};

const currentLanguageLabel: string = getCurrrentLanguageParam("label");
const currentLanguageLink: string = getCurrrentLanguageParam("link");
---

<section>
  <div class="flex flex-row gap-4">
    {
      MenuData.map((menu) => {
        const menuLabel =
          currentLanguageLabel === "labelEn" ? menu.labelEn : menu.label;
        const menuLink =
          currentLanguageLink === "linkEn" ? menu.linkEn : menu.link;

        return (
          <div class="dropdown">
            <button class="dropdown-button">
              {menu?.link ? (
                <a href={menuLink} class="no-underline">
                  {menuLabel}
                </a>
              ) : (
                <> {menuLabel}</>
              )}
            </button>

            {menu?.items && (
              <div class="dropdown-content">
                {(menu?.items ?? []).map((item) => {
                  const itemLabel =
                    currentLanguageLabel === "labelEn"
                      ? item.labelEn
                      : item.label;
                  const itemLink =
                    currentLanguageLink === "linkEn"
                      ? item.linkEn
                      : item.link;
                  return <a href={itemLink}>{itemLabel}</a>;
                })}
              </div>
            )}
          </div>
        );
      })
    }
  </div>
</section>

<style>
  .dropdown {
    position: relative;
    display: inline-block;
  }

  .dropdown-button {
    padding: 8px;
    border-radius: 0.375rem;
    border: none;
    cursor: pointer;
    background-color: var(--sl-color-bg-nav);
  }
  .dropdown-button {
    color: var(--sl-color-white);
  }

  .dropdown-button a {
    color: inherit;
  }

  .dropdown-button:hover {
    border-radius: 0.375rem;
    color: var(--sl-color-text-invert);
    background-color: var(--sl-color-text-accent);
  }

  .dropdown-content {
    display: none;
    position: absolute;
    background-color: var(--sl-color-bg-sidebar);
    min-width: 12rem;
    border-radius: 0.375rem;
    border: 1px solid var(--sl-color-gray-5);
    z-index: 1;
  }

  .dropdown-content a {
    display: block;
    padding: 0.5rem;
    text-decoration: none;
    cursor: pointer;
    /* 优化 */
    border-radius: 0.3rem;
    color: inherit;
  }

  .dropdown-content a:hover {
    color: var(--sl-color-text-invert);
    background-color: var(--sl-color-text-accent);
  }

  .dropdown:hover .dropdown-content {
    display: block;
  }
</style>
